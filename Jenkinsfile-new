pipeline {
    agent any
    environment {
        FOLDER = '/home/kaif/jenkins-server-compose/jenkins_home/workspace/owasp-trivy_main/report'
    }
    stages {
        /*
        stage('installing required packages') {
            agent {
               docker {
                  image 'serversideup/php:8.4-cli'
                 args '--user root'
                 }
              }
            steps {
                sh '''
        install-php-extensions intl gd xsl pcov
        cp .env.example .env && \
        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
        composer config --no-plugins allow-plugins.phpstan/extension-installer true && \
        composer install --no-interaction --prefer-dist && \
        php artisan key:generate
        '''
            }
        }
       
         stage('Owasp dependency checking') {
            steps {
                dependencyCheck additionalArguments: '''
                --scan \'./\'
                --out \'./\'
                --format \'ALL\'
                --prettyPrint''', odcInstallation: 'DP-check'
            }
        }
 
        stage('Image build') {
            agent {
                docker {
                    image 'docker:latest'
                    args '--user root'
                }
            }
            steps {
               sh """
                  ls -la && sleep 30
                  docker build -t image_name .
                  """
            }
        }
*/
        stage('Trivy Scanning') {
            steps {
                sh """
                    docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\
              -v ${env.FOLDER}:/report \\
              aquasec/trivy image image_name \\
              --severity LOW,MEDIUM,HIGH \\
              --exit-code 0 \\
              --quiet \\
              --format json -o /report/trivy-High-Medium-Low.json
              
              docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\
              -v ${env.FOLDER}/report:/report \\
                aquasec/trivy image image_name \\
                --severity CRITICAL \\
              --exit-code 1 \\
              --quiet \\
              --format json -o /report/trivy-critical.json

              

              docker run --rm  \\ 
             -v ${env.FOLDER}/report:/report \\ 
              aquasec/trivy convert \\
              --format template   --template "@contrib/html.tpl"  \\
               --output /report/trivy-critical.json   /report/trivy-critical.json            
                   """
            }
            post {
                always {
                    sh """
            docker run --rm   \\
              -v ${env.FOLDER}/report:/report \\ 
               aquasec/trivy convert \\
              --format template   --template "@contrib/html.tpl"  \\
              --output /report/trivy-image-medium.html   /report/trivy-High-Medium-Low.json

            docker run --rm  \\ 
             -v ${env.FOLDER}/report:/report \\ 
              aquasec/trivy convert \\
              --format template   --template "@contrib/html.tpl"  \\
               --output /report/trivy-critical.json   /report/trivy-critical.json 
            """
                }
            }
        }
    }
}
